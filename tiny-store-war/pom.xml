<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>js.tiny.store</groupId>
		<artifactId>tiny-store</artifactId>
		<version>${revision}</version>
	</parent>
	<artifactId>tiny-store-war</artifactId>
	<packaging>war</packaging>

	<dependencies>
		<dependency>
			<groupId>js.tiny.store</groupId>
			<artifactId>tiny-store-backend</artifactId>
			<version>${revision}</version>
		</dependency>
	</dependencies>

	<build>
		<finalName>ROOT</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<includeScope>provided</includeScope>
							<excludeArtifactIds>tools-apt,tools-script-gen</excludeArtifactIds>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<configuration>
					<url>http://localhost:8080/manager/text</url>
					<server>tomcat</server>
					<path>/${project.build.finalName}</path>
				</configuration>
				<executions>
					<execution>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>redeploy-only</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>development</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-war-plugin</artifactId>
						<configuration>
							<webResources>
								<resource>
									<directory>../tiny-store-frontend/target/site</directory>
								</resource>
							</webResources>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>release</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-war-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>docker</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.6.0</version>
						<executions>
							<!-- Remove existing image from local repo -->
							<execution>
								<id>docker-clean</id>
								<phase>install</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>docker</executable>
									<workingDirectory>${project.basedir}</workingDirectory>
									<arguments>
										<argument>rmi</argument>
										<argument>${project.groupId}/${project.artifactId}:${project.version}</argument>
									</arguments>
								</configuration>
							</execution>
							<!-- Create new docker image using Dockerfile which must be present in current working directory. Tag the image using maven project version information. -->
							<execution>
								<id>docker-build</id>
								<phase>install</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>docker</executable>
									<workingDirectory>${project.basedir}</workingDirectory>
									<arguments>
										<argument>build</argument>
										<argument>-t</argument>
										<argument>${project.groupId}/${project.artifactId}:${project.version}</argument>
										<argument>.</argument>
									</arguments>
								</configuration>
							</execution>
							<!-- Login and Push the image to a docker repo. -->
							<execution>
								<id>docker-login</id>
								<phase>deploy</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>docker</executable>
									<workingDirectory>${project.basedir}</workingDirectory>
									<arguments>
										<argument>login</argument>
										<argument>-u</argument>
										<argument>${docker.user}</argument>
										<argument>-p</argument>
										<argument>${docker.password}</argument>
										<argument>${docker.url}</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>docker-push</id>
								<phase>deploy</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>docker</executable>
									<workingDirectory>${project.basedir}</workingDirectory>
									<arguments>
										<argument>push</argument>
										<argument>${project.groupId}/${project.artifactId}:${project.version}</argument>
									</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>