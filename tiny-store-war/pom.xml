<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.js-lib</groupId>
		<artifactId>tiny-store</artifactId>
		<version>${revision}</version>
	</parent>
	<groupId>com.js-lib.tiny-store</groupId>
	<artifactId>war</artifactId>
	<packaging>war</packaging>

	<dependencies>
		<dependency>
			<groupId>com.js-lib.tiny-store</groupId>
			<artifactId>backend</artifactId>
			<version>${revision}</version>
		</dependency>

		<dependency>
			<groupId>com.js-lib</groupId>
			<artifactId>tiny-core</artifactId>
			<version>1.3.3</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.js-lib</groupId>
			<artifactId>tiny-http-rmi</artifactId>
			<version>1.3.3</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.js-lib</groupId>
			<artifactId>tiny-rest</artifactId>
			<version>1.3.3</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.js-lib</groupId>
			<artifactId>tiny-resource</artifactId>
			<version>1.3.3</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.js-lib</groupId>
			<artifactId>tiny-interceptor</artifactId>
			<version>1.3.3</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.js-lib</groupId>
			<artifactId>tiny-async</artifactId>
			<version>1.3.3</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.js-lib</groupId>
			<artifactId>tiny-transaction</artifactId>
			<version>1.3.3</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>com.js-lib</groupId>
			<artifactId>js-injector</artifactId>
			<version>1.0.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.js-lib</groupId>
			<artifactId>js-json</artifactId>
			<version>2.1.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.js-lib</groupId>
			<artifactId>js-log4j</artifactId>
			<version>1.3.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.velocity</groupId>
			<artifactId>velocity</artifactId>
			<version>1.7</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jgit</groupId>
			<artifactId>org.eclipse.jgit</artifactId>
			<version>5.13.0.202109080827-r</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.5.12</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpmime</artifactId>
			<version>4.5.12</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>com.js-lib</groupId>
			<artifactId>js-eclipselink</artifactId>
			<version>1.1.2</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.persistence</groupId>
			<artifactId>eclipselink</artifactId>
			<version>4.0.0-M3</version>
			<scope>provided</scope>
			<exclusions>
				<exclusion>
					<groupId>jakarta.persistence</groupId>
					<artifactId>jakarta.persistence-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.mchange</groupId>
			<artifactId>c3p0</artifactId>
			<version>0.9.2.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>8.0.16</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>net.sourceforge.jtds</groupId>
			<artifactId>jtds</artifactId>
			<version>1.3.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.mongodb</groupId>
			<artifactId>mongodb-driver-sync</artifactId>
			<version>4.6.0</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.25</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<version>1.7.25</version>
			<scope>provided</scope>
		</dependency>

	</dependencies>

	<build>
		<finalName>ROOT</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<includeScope>provided</includeScope>
							<excludeArtifactIds>tools-apt,tools-script-gen</excludeArtifactIds>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<configuration>
					<url>http://localhost:8080/manager/text</url>
					<server>tomcat</server>
					<path>/${project.build.finalName}</path>
				</configuration>
				<executions>
					<execution>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>redeploy-only</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>development</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-war-plugin</artifactId>
						<configuration>
							<webResources>
								<resource>
									<directory>../tiny-store-frontend/target/site</directory>
								</resource>
							</webResources>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>release</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-war-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>docker</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.6.0</version>
						<executions>
							<!-- Remove existing image from local repo -->
							<execution>
								<id>docker-clean</id>
								<phase>install</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>docker</executable>
									<workingDirectory>${project.basedir}</workingDirectory>
									<arguments>
										<argument>rmi</argument>
										<argument>${project.groupId}/${project.artifactId}:${project.version}</argument>
									</arguments>
								</configuration>
							</execution>
							<!-- Create new docker image using Dockerfile which must be present in current working directory. Tag the image using maven project version information. -->
							<execution>
								<id>docker-build</id>
								<phase>install</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>docker</executable>
									<workingDirectory>${project.basedir}</workingDirectory>
									<arguments>
										<argument>build</argument>
										<argument>-t</argument>
										<argument>${project.groupId}/${project.artifactId}:${project.version}</argument>
										<argument>.</argument>
									</arguments>
								</configuration>
							</execution>
							<!-- Login and Push the image to a docker repo. -->
							<execution>
								<id>docker-login</id>
								<phase>deploy</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>docker</executable>
									<workingDirectory>${project.basedir}</workingDirectory>
									<arguments>
										<argument>login</argument>
										<argument>-u</argument>
										<argument>${docker.user}</argument>
										<argument>-p</argument>
										<argument>${docker.password}</argument>
										<argument>${docker.url}</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>docker-push</id>
								<phase>deploy</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>docker</executable>
									<workingDirectory>${project.basedir}</workingDirectory>
									<arguments>
										<argument>push</argument>
										<argument>${project.groupId}/${project.artifactId}:${project.version}</argument>
									</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>